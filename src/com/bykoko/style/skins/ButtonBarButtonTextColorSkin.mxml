<?xml version="1.0" encoding="utf-8"?>

<s:SparkSkin minWidth="21" 
			 minHeight="21" 
			 alpha.disabled="0.5"
			 xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"> 
			 
    
	<fx:Metadata>
		[HostComponent("spark.components.ButtonBarButton")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.bykoko.util.ColorUtil;
			import com.bykoko.vo.xmlmapping.config.Color;
			
			import mx.events.FlexEvent;
			
			import spark.components.ButtonBar;
			import spark.components.ButtonBarButton;
			
			
			
			
			/* Define the skin elements that should not be colorized. 
			For toggle button, the graphics are colorized but the label is not. */
			static private const exclusions:Array = [];
			
			override public function get colorizeExclusions():Array 
			{
				return exclusions;
			}
			
		]]>
	</fx:Script>
	
	<!-- Estados -->
	<s:states>
		<s:State name="up"/>
		<s:State name="over" stateGroups="overStates"/>
		<s:State name="down" stateGroups="downStates"/>
		<s:State name="disabled" stateGroups="disabledStates"/>
		<s:State name="upAndSelected" stateGroups="selectedStates" />
		<s:State name="overAndSelected" stateGroups="selectedStates" />
		<s:State name="downAndSelected" stateGroups="selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
	</s:states>
		
	<!-- GrÃ¡ficos -->
	<s:Rect id="background" 
			width="26" 
			height="22"
			radiusX="3"
			radiusY="3">
		<s:filters>
			<s:GlowFilter blurX="7"
						  blurY="7"
						  strength="2"
						  alpha.selectedStates="1"
						  alpha="0"
						  color="0xf75602"/>
		</s:filters>
		<s:stroke>
			<s:SolidColorStroke color="0xcccccc"
								color.selectedStates="0xf75602"
								weight="1"
								caps="square"
								scaleMode="none"
								pixelHinting="true"/>
		</s:stroke>
		<s:fill>
			<!--s:SolidColor color="{(hostComponent.data as Object).color}"/-->
			<s:SolidColor color="{ColorUtil.htmlStringToHexNumber((hostComponent.data as Color).hex)}"/>
		</s:fill>
	</s:Rect>
</s:SparkSkin>
